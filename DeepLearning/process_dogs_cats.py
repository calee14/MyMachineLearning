# -*- coding: utf-8 -*-
"""loading_own_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sO7mvQvSs_DSUvX6KWm0y5RNv4DNZ0lP
"""

import numpy as np
import matplotlib.pyplot as plt
import os
import cv2

# get data from https://www.microsoft.com/en-us/download/confirmation.aspx?id=54765
DATADIR = "X:/Datasets/PetImages" # put your own directory for data
CATEGORIES = ["Dog", "Cat"]

for category in CATEGORIES:
  path = os.path.join(DATA, category) # path to cats or dogs dir
  for img in os.listdir(path):
    img_array = cv2.imread(os.path.join(path, img), cv2.IMREAD_GRAYSCALE)
    plt.imshow(img_array, cmap="grey")
    plt.show()
    break
  break

print(img_array.shape)

IMG_SIZE = 50

new_array = cv2.resize(img_array, (IMG_SIZE, IMG_SIZE))
plt.imshow(new_array, cmap='grey')
plt.show()

training_data = []

def create_training_data():
  for category in CATEGORIES:
    path = os.path.join(DATA, category) # path to cats or dogs dir
    class_num = CATEGORIES.index(category)
    for img in os.listdir(path):
      try:
        img_array = cv2.imread(os.path.join(path, img), cv2.IMREAD_GRAYSCALE)
        new_array = cv2.resize(img_array, (IMG_SIZE, IMG_SIZE))
        training_data.append([new_array, class_num])
      except Exception as e:
        pass
      
create_training_data()

print(len(training_data))

import random

random.shuffle(training_data)

for sample in training_data[:10]:
  print(sample[1])

X = []
y = []

for features, label in training_data:
  X.append(features)
  y.append(label)
  
X = np.array(X).reshape(-1, IMG_SIZE, IMG_SIZE, 1) # num of features=-1/any number of feature, shape of data=IMG_SIZE, IMGSIZE, grey scale=1

import pickle

pickle_out = open("X.pickle", "wb")
pickle.dump(X, pickle_out)
pickle_out.close()

pickle_out = open("y.pickle", "wb")
pickle.dump(y, pickle_out)
pickle_out.close()

# to load pickled data
pickle_in = open("X.pickle", "rb")
X = pickle.load(pickle_in)